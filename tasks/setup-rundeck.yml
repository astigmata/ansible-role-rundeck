---
- name: Install and configure Rundeck packages
  ansible.builtin.apt:
    name:
      - rundeck
      - default-jre-headless
    state: present
    update_cache: true

- name: Stop any existing Rundeck services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - rundeckd
    - rundeck
  ignore_errors: true

- name: Create rundeck directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: rundeck
    group: rundeck
    mode: '0755'
  loop:
    - /var/log/rundeck
    - /var/rundeck/projects

- name: Configure Rundeck framework properties
  ansible.builtin.lineinfile:
    path: /etc/rundeck/framework.properties
    regexp: "^framework.server.url"
    line: "framework.server.url = {{ rundeck_server_url | default('http://localhost:4440') }}"
    backup: true
  notify: restart rundeck

- name: Configure Rundeck server settings
  ansible.builtin.lineinfile:
    path: /etc/rundeck/rundeck-config.properties
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: true
  loop:
    - regexp: "^grails.serverURL"
      line: "grails.serverURL={{ rundeck_server_url | default('http://localhost:4440') }}"
    - regexp: "^server.address"
      line: "server.address={{ rundeck_listen_address | default('0.0.0.0') }}"
  notify: restart rundeck

- name: Create admin user properties file
  ansible.builtin.copy:
    content: |
      {{ rundeck_admin_user | default('admin') }}:MD5:{{ (rundeck_admin_password | default('admin123') | hash('md5')) }},user,admin,architect
    dest: /etc/rundeck/realm.properties
    owner: rundeck
    group: rundeck
    mode: '0640'
    backup: true
  notify: restart rundeck

- name: Check which Rundeck service exists
  ansible.builtin.stat:
    path: "{{ item }}"
  register: service_files
  loop:
    - /etc/systemd/system/rundeck.service
    - /lib/systemd/system/rundeck.service
    - /etc/systemd/system/rundeckd.service
    - /lib/systemd/system/rundeckd.service

- name: Set service name based on available files
  ansible.builtin.set_fact:
    rundeck_service_name: "{{ 'rundeck' if service_files.results | selectattr('stat.exists') | selectattr('item', 'search', 'rundeck.service') | list | length > 0 else 'rundeckd' }}"

- name: Create systemd service for Rundeck if not exists
  ansible.builtin.template:
    src: rundeck.service.j2
    dest: /etc/systemd/system/rundeck.service
    owner: root
    group: root
    mode: '0644'
  when: rundeck_service_name == 'rundeck'

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start Rundeck service
  ansible.builtin.systemd:
    name: "{{ rundeck_service_name }}"
    enabled: true
    state: started

- name: Wait for Rundeck to be available
  ansible.builtin.wait_for:
    port: 4440
    host: 127.0.0.1
    delay: 15
    timeout: 180

- name: Check Rundeck process
  ansible.builtin.command: pgrep -f rundeck
  register: rundeck_process
  ignore_errors: true

- name: Test Rundeck web interface
  ansible.builtin.uri:
    url: "http://127.0.0.1:4440"
    method: GET
    status_code: [200, 302]
  register: rundeck_web

- name: Display service status
  ansible.builtin.debug:
    msg:
      - "Service used: {{ rundeck_service_name }}"
      - "Rundeck process: {{ 'Running' if rundeck_process.rc == 0 else 'Not running' }}"
      - "Check logs: sudo journalctl -u {{ rundeck_service_name }} -f"
